<UserControl x:Class="RTWin.Controls.TextsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:RTWin.Controls"
             xmlns:common="clr-namespace:RTWin.Common"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:RTWin.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\App_Data\Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:DateTimeConverter x:Key="dateConverter"/>
            <converters:EnumMatchToBooleanConverter x:Key="enumConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="50" Width="280" MaxWidth="500"></ColumnDefinition>
            <ColumnDefinition Width="4"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0">
            <Grid DockPanel.Dock="Bottom" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="Add" Command="{Binding AddCommand}"/>
            </Grid>
            <GroupBox Header="Items">
                <TreeView ItemsSource="{Binding Root}" x:Name="TreeView">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=TreeView,Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Name}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </GroupBox>
        </DockPanel>
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
        <DockPanel Grid.Column="2">
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" DockPanel.Dock="Bottom" Height="40">
                <Button Content="Edit" Command="{Binding EditCommand}"/>
                <Button Content="Copy" Command="{Binding CopyCommand}"/>
                <Button Content="Delete" Command="{Binding DeleteCommand}"/>
                <Button Content="{Binding ItemType}" Command="{Binding ReadCommand}" CommandParameter="Single"/>
                <Button Content="Parallel" IsEnabled="{Binding SelectedItem.IsParallel}" Command="{Binding ReadCommand}" CommandParameter="Parallel"/>
            </StackPanel>

            <Grid DockPanel.Dock="Top" Height="50">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Content="Filter" Grid.Column="0"></Label>
                <TextBox Grid.Column="1" Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}"></TextBox>
            </Grid>
            <DataGrid ItemsSource="{Binding Items}" AutoGenerateColumns="False" CanUserReorderColumns="True"  BorderThickness="0"
                      CanUserAddRows="False" CanUserResizeRows="False" SelectionMode="Single" SelectedItem="{Binding SelectedItem}"
                      EnableRowVirtualization="True" IsReadOnly="True" CanUserDeleteRows="False" HorizontalGridLinesBrush="#DEDEDE" GridLinesVisibility="Horizontal"
                      >
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ItemType}" Value="Video">
                                <Setter Property="Background" Value="#F7F7F7"></Setter>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#70C5E9"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ReadCommand}" CommandParameter="Determine"></MouseBinding>
                </DataGrid.InputBindings>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="120" Header="Language" Binding="{Binding L1Language, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="Collection" Binding="{Binding CollectionName, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="40" Header="No" Binding="{Binding CollectionNo, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="L1 Title" Binding="{Binding L1Title, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="55" Header="Read" Binding="{Binding ReadTimes, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="75" Header="Listened" Binding="{Binding ListenedTimes, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="90" Header="Read" Binding="{Binding LastRead, Mode=OneWay, Converter={StaticResource dateConverter}}"></DataGridTextColumn>
                    <DataGridCheckBoxColumn Width="65" Header="Media?" Binding="{Binding Path=HasMedia, Mode=OneWay}" ElementStyle="{DynamicResource MetroDataGridCheckBox}"></DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Width="85" Header="Parallel?" Binding="{Binding Path=IsParallel, Mode=OneWay}" ElementStyle="{DynamicResource MetroDataGridCheckBox}"></DataGridCheckBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</UserControl>